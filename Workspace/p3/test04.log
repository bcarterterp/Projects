81: // test boolean expressions 
82: int x,y;
83: void main ( )
84: {
85:    // int a,b;
86:    x = 1;
87:    y = 2;
88: 
89:    printStr("Results should be : 1 3 -1 ");
90:    printLn();
91: 
92:    if (x < 3) { 
93:       printInt(x); 
94:       printStr(" ");
95:    }
96:    else {
97:       printStr("Error 1"); 
98:    }
99:    if ((x == 1) && (y == 2)) {   // True && True
100:       printInt(x+y); 
101:       printStr(" ");
102:    }
103:    if ((x == 2) || (y > 1)) {    // False || TRUE
104:       printInt(x-y); 
105:       printStr(" ");
106:    }
107:   printLn(); 
108: }
** Global Variables **
main, void, function, param = <void>
printInt, void, function, param = int
printLn, void, function, param = <void>
printStr, void, function, param = String
x, int
y, int
** Local Variables in main() **
{
{
}
{
}
{
}
{
}
}
TREE_PROC: main
{
    TREE_INSTR: x = 1
    TREE_INSTR: y = 2
    TREE_INSTR: CALL printStr("Results should be : 1 3 -1 ")
    TREE_INSTR: CALL printLn()
  TREE_IF: CONDITION: (x LESS 3)
{
    TREE_INSTR: CALL printInt(x)
    TREE_INSTR: CALL printStr(" ")
}
  ELSE: 
{
    TREE_INSTR: CALL printStr("Error 1")
}
  END_IF 
  TREE_IF: CONDITION: ((x EQ_OP 1) AND_OP (y EQ_OP 2))
{
    TREE_INSTR: CALL printInt((x PLUS y))
    TREE_INSTR: CALL printStr(" ")
}
  END_IF 
  TREE_IF: CONDITION: ((x EQ_OP 2) OR_OP (y GR 1))
{
    TREE_INSTR: CALL printInt((x MINUS y))
    TREE_INSTR: CALL printStr(" ")
}
  END_IF 
    TREE_INSTR: CALL printLn()
}
END_PROC

** Executing test04.class **
Results should be : 1 3 -1 
1 3 -1 
