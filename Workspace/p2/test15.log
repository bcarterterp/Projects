325: //--------- test nested scoping type errors ---------
326: int a, b;
327: void c ( int d )
328: {
329:     int e, f;
330:     if (1 == e) {
331:         int g,h;
ERROR(332) undeclared variable i
332:         a = b + d + e + f + g + h + i;  // undeclared variable i
333:     } 
334:     else {
335:         int i,j,a,b;  
ERROR(336) undeclared variable g
336:         a = b - d - e - f - i - j - g;    // undeclared variable g
337:     }
ERROR(338) undeclared variable h
338:     a = b + d - e * f - e + h / b + a * a;   // undeclared variable h
339: }
340: 
341: int k ( )
342: {
343:     int l,m;
344:     if (1 == 2) {
345:         int n,o,a;
ERROR(346) undeclared variable i
346:         a = b * l * m * i * n * o;  // undeclared variable i
347:     } 
348:     else {
349:         int p,q,b,k,l,m; 
350: 	int a[4];
ERROR(351) misuse of a
351:         a = b / l / m / p / q;    // misuse of a
352:     }
353:     return 1;
354: }
** Global Variables **
a, int
b, int
c, void, function, param = int
k, int, function, param = <void>
printInt, void, function, param = int
printLn, void, function, param = <void>
printStr, void, function, param = String
** Local Variables in c() **
d, int
{
e, int
f, int
{
g, int
h, int
}
{
a, int
b, int
i, int
j, int
}
}
** Local Variables in k() **
{
l, int
m, int
{
a, int
n, int
o, int
}
{
a, int, array
b, int
k, int
l, int
m, int
p, int
q, int
}
}
TREE_PROC: c
{
  TREE_IF: CONDITION: (1 EQ_OP e)
{
    TREE_INSTR: a = ((((((b PLUS d) PLUS e) PLUS f) PLUS g) PLUS h) PLUS i)
}
  ELSE: 
{
    TREE_INSTR: a = ((((((b MINUS d) MINUS e) MINUS f) MINUS i) MINUS j) MINUS g)
}
  END_IF 
    TREE_INSTR: a = (((((b PLUS d) MINUS (e MUL f)) MINUS e) PLUS (h DIV b)) PLUS (a MUL a))
}
END_PROC

TREE_PROC: k
{
  TREE_IF: CONDITION: (1 EQ_OP 2)
{
    TREE_INSTR: a = (((((b MUL l) MUL m) MUL i) MUL n) MUL o)
}
  ELSE: 
{
    TREE_INSTR: a = ((((b DIV l) DIV m) DIV p) DIV q)
}
  END_IF 
    TREE_INSTR:  RETURN 1
}
END_PROC

