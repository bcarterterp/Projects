109: // test functions and parameter passing
110: 
111: int factorial ( int f )
112: {
113:    if ((f == 0) || (f == 1)) {
114:       return 1;
115:    }
116:    f = f * factorial(f - 1);
117:    return f;
118: }
119:  
120: void main ( ) 
121: {
122:    int z;
123: 
124:    printStr("Results should be : 6 720");
125:    printLn();
126: 
127:    z = factorial(3);
128:    printInt(z);
129:    printStr(" ");
130: 
131:    z = factorial(6);
132:    printInt(z);
133:    printLn();
134: }
135: 
** Global Variables **
factorial, int, function, param = int
main, void, function, param = <void>
printInt, void, function, param = int
printLn, void, function, param = <void>
printStr, void, function, param = String
** Local Variables in factorial() **
f, int
{
{
}
}
** Local Variables in main() **
{
z, int
}
TREE_PROC: factorial
{
  TREE_IF: CONDITION: ((f EQ_OP 0) OR_OP (f EQ_OP 1))
{
    TREE_INSTR:  RETURN 1
}
  END_IF 
    TREE_INSTR: f = (f MUL CALL factorial((f MINUS 1))
)
    TREE_INSTR:  RETURN f
}
END_PROC

TREE_PROC: main
{
    TREE_INSTR: CALL printStr("Results should be : 6 720")
    TREE_INSTR: CALL printLn()
    TREE_INSTR: z = CALL factorial(3)

    TREE_INSTR: CALL printInt(z)
    TREE_INSTR: CALL printStr(" ")
    TREE_INSTR: z = CALL factorial(6)

    TREE_INSTR: CALL printInt(z)
    TREE_INSTR: CALL printLn()
}
END_PROC

ERROR(136) expNode is not an Identifier 
** Executing test05.class **
Results should be : 6 720
6 720
